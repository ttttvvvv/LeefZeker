---
export interface Props {
  variant?: 'full' | 'compact';
  showTitle?: boolean;
}

const { variant = 'full', showTitle = true } = Astro.props;
---

<div class="subsidie-check" data-variant={variant}>
  {showTitle && (
    <div class="subsidie-check-header">
      <h3 class="subsidie-check-title">Gratis subsidie-check</h3>
      <p class="subsidie-check-subtitle">Ontdek binnen 5 minuten waar u recht op heeft</p>
    </div>
  )}

  <div class="subsidie-check-container">
    <div class="subsidie-check-progress">
      <div class="progress-bar">
        <div class="progress-fill" id="subsidie-progress-fill"></div>
      </div>
      <span class="progress-text" id="subsidie-progress-text">Vraag 1 van 5</span>
    </div>

    <div class="subsidie-check-questions" id="subsidie-questions">
      
      <!-- Vraag 1: Gemeente -->
      <div class="subsidie-question active" data-question="1">
        <div class="question-icon">🏠</div>
        <h4 class="question-title">In welke gemeente woont u?</h4>
        <div class="question-input">
          <input 
            type="text" 
            id="gemeente-input" 
            placeholder="Typ uw gemeente of postcode..."
            list="gemeente-list"
            autocomplete="off"
          />
          <datalist id="gemeente-list">
            <option value="Amsterdam">
            <option value="Rotterdam">
            <option value="Den Haag">
            <option value="Utrecht">
            <option value="Eindhoven">
            <option value="Tilburg">
            <option value="Groningen">
            <option value="Almere">
            <option value="Breda">
            <option value="Nijmegen">
            <option value="Haarlem">
            <option value="Arnhem">
            <option value="Zaanstad">
            <option value="Haarlemmermeer">
            <option value="Amersfoort">
          </datalist>
          <button class="next-btn" id="gemeente-next" disabled>Volgende</button>
        </div>
      </div>

      <!-- Vraag 2: Hulpmiddel -->
      <div class="subsidie-question" data-question="2">
        <div class="question-icon">🛠️</div>
        <h4 class="question-title">Welk hulpmiddel heeft u nodig?</h4>
        <div class="question-options">
          <button class="option-button" data-value="traplift">
            <span class="option-icon">🏗️</span>
            <span class="option-text">Traplift</span>
          </button>
          <button class="option-button" data-value="scootmobiel">
            <span class="option-icon">🛵</span>
            <span class="option-text">Scootmobiel</span>
          </button>
          <button class="option-button" data-value="personenalarm">
            <span class="option-icon">📞</span>
            <span class="option-text">Personenalarm</span>
          </button>
          <button class="option-button" data-value="rook-co-melder">
            <span class="option-icon">🚨</span>
            <span class="option-text">Rook-/CO-melder</span>
          </button>
          <button class="option-button" data-value="deuropener">
            <span class="option-icon">🚪</span>
            <span class="option-text">Deuropener/intercom</span>
          </button>
          <button class="option-button" data-value="anders">
            <span class="option-icon">➕</span>
            <span class="option-text">Anders</span>
          </button>
        </div>
        <div class="custom-input" id="anders-input" style="display: none;">
          <input type="text" placeholder="Beschrijf welk hulpmiddel u nodig heeft..." />
        </div>
      </div>

      <!-- Vraag 3: WMO aanvraag -->
      <div class="subsidie-question" data-question="3">
        <div class="question-icon">📋</div>
        <h4 class="question-title">Is er al een WMO-aanvraag gedaan?</h4>
        <div class="question-options">
          <button class="option-button" data-value="goedgekeurd">
            <span class="option-icon">✅</span>
            <span class="option-text">Ja, goedgekeurd</span>
          </button>
          <button class="option-button" data-value="in-behandeling">
            <span class="option-icon">⏳</span>
            <span class="option-text">Ja, in behandeling</span>
          </button>
          <button class="option-button" data-value="nee">
            <span class="option-icon">❌</span>
            <span class="option-text">Nee</span>
          </button>
          <button class="option-button" data-value="weet-niet">
            <span class="option-icon">❓</span>
            <span class="option-text">Weet ik niet</span>
          </button>
        </div>
      </div>

      <!-- Vraag 4: Medische indicatie -->
      <div class="subsidie-question" data-question="4">
        <div class="question-icon">🏥</div>
        <h4 class="question-title">Is er een medische reden voor het hulpmiddel?</h4>
        <div class="question-options">
          <button class="option-button" data-value="ja-met-verklaring">
            <span class="option-icon">📄</span>
            <span class="option-text">Ja, met verklaring van arts/ergotherapeut</span>
          </button>
          <button class="option-button" data-value="ja-zonder-verklaring">
            <span class="option-icon">🩺</span>
            <span class="option-text">Ja, maar geen officiële verklaring</span>
          </button>
          <button class="option-button" data-value="nee">
            <span class="option-icon">❌</span>
            <span class="option-text">Nee</span>
          </button>
          <button class="option-button" data-value="weet-niet-zeker">
            <span class="option-icon">❓</span>
            <span class="option-text">Weet ik niet zeker</span>
          </button>
        </div>
      </div>

      <!-- Vraag 5: Betalingsbereidheid -->
      <div class="subsidie-question" data-question="5">
        <div class="question-icon">💰</div>
        <h4 class="question-title">Wilt u zelf betalen als het niet wordt vergoed?</h4>
        <div class="question-options">
          <button class="option-button" data-value="ja-blijverslening">
            <span class="option-icon">🏦</span>
            <span class="option-text">Ja, eventueel met Blijverslening</span>
          </button>
          <button class="option-button" data-value="alleen-vergoed">
            <span class="option-icon">🎯</span>
            <span class="option-text">Liever alleen als het vergoed wordt</span>
          </button>
          <button class="option-button" data-value="weet-nog-niet">
            <span class="option-icon">🤔</span>
            <span class="option-text">Weet ik nog niet</span>
          </button>
        </div>
      </div>

      <!-- Resultaat -->
      <div class="subsidie-question subsidie-results" data-question="6">
        <div class="results-icon">🎯</div>
        <h4 class="results-title">Uw subsidie-advies</h4>
        <div class="results-content" id="results-content">
          <!-- Wordt gevuld door JavaScript -->
        </div>
        <div class="results-badge" id="results-badge">
          <!-- Wordt gevuld door JavaScript -->
        </div>
        <div class="results-actions">
          <a href="tel:020-123-45-67" class="btn btn-primary btn-large">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
            </svg>
            Bel direct voor persoonlijk advies
          </a>
          <a href="/contact" class="btn btn-secondary btn-large">
            📩 Laat ons contact opnemen
          </a>
        </div>
        <div class="results-note">
          📞 Bereikbaar tot 20:00 - Ook 's avonds en op zaterdag mogelijk
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  let currentQuestion = 1;
  const totalQuestions = 5;
  let subsidieData = {};

  // Initialize subsidie check
  initSubsidieCheck();

  function initSubsidieCheck() {
    updateProgress();
    
    // Gemeente input handler
    const gemeenteInput = document.getElementById('gemeente-input');
    const gemeenteNext = document.getElementById('gemeente-next');
    
    if (gemeenteInput && gemeenteNext) {
      gemeenteInput.addEventListener('input', function() {
        gemeenteNext.disabled = this.value.length < 2;
      });

      gemeenteNext.addEventListener('click', function() {
        if (gemeenteInput.value.trim()) {
          subsidieData.gemeente = gemeenteInput.value.trim();
          nextQuestion();
        }
      });

      gemeenteInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter' && !gemeenteNext.disabled) {
          gemeenteNext.click();
        }
      });
    }

    // Option buttons handler
    document.querySelectorAll('.option-button').forEach(button => {
      button.addEventListener('click', handleOptionClick);
    });
  }

  function handleOptionClick(event) {
    const button = event.currentTarget;
    const question = button.closest('.subsidie-question');
    const questionNumber = parseInt(question.dataset.question);
    const value = button.dataset.value;

    // Remove selected class from all options in this question
    question.querySelectorAll('.option-button').forEach(opt => {
      opt.classList.remove('selected');
    });

    // Add selected class to clicked option
    button.classList.add('selected');

    // Store answer
    subsidieData[`question${questionNumber}`] = value;

    // Handle "anders" option
    if (value === 'anders') {
      const customInput = question.querySelector('#anders-input');
      if (customInput) {
        customInput.style.display = 'block';
        const input = customInput.querySelector('input');
        input.focus();
        input.addEventListener('input', function() {
          subsidieData.custom_hulpmiddel = this.value;
        });
        input.addEventListener('keypress', function(e) {
          if (e.key === 'Enter' && this.value.trim()) {
            setTimeout(() => nextQuestion(), 600);
          }
        });
        return; // Don't auto-advance yet
      }
    }

    // Auto-advance after short delay
    setTimeout(() => {
      if (questionNumber < totalQuestions) {
        nextQuestion();
      } else {
        showResults();
      }
    }, 600);
  }

  function nextQuestion() {
    // Hide current question
    document.querySelector('.subsidie-question.active').classList.remove('active');
    
    currentQuestion++;
    
    // Show next question
    const nextQuestionEl = document.querySelector(`[data-question="${currentQuestion}"]`);
    if (nextQuestionEl) {
      nextQuestionEl.classList.add('active', 'animate-in');
      
      setTimeout(() => {
        nextQuestionEl.classList.remove('animate-in');
      }, 400);
    }

    updateProgress();
  }

  function updateProgress() {
    const progressFill = document.getElementById('subsidie-progress-fill');
    const progressText = document.getElementById('subsidie-progress-text');
    
    if (progressFill && progressText) {
      const progress = (currentQuestion / totalQuestions) * 100;
      progressFill.style.width = `${progress}%`;
      
      if (currentQuestion <= totalQuestions) {
        progressText.textContent = `Vraag ${currentQuestion} van ${totalQuestions}`;
      } else {
        progressText.textContent = 'Resultaten';
      }
    }
  }

  function showResults() {
    // Hide current question
    document.querySelector('.subsidie-question.active').classList.remove('active');
    
    // Show results
    const resultsEl = document.querySelector('.subsidie-results');
    if (resultsEl) {
      resultsEl.classList.add('active', 'animate-in');
      
      setTimeout(() => {
        resultsEl.classList.remove('animate-in');
      }, 400);
    }

    // Update progress to completed
    currentQuestion = totalQuestions + 1;
    updateProgress();

    // Generate results
    generateResults();
  }

  function generateResults() {
    const resultsContent = document.getElementById('results-content');
    const resultsBadge = document.getElementById('results-badge');

    if (!resultsContent || !resultsBadge) return;

    const gemeente = subsidieData.gemeente || 'uw gemeente';
    const hulpmiddel = subsidieData.question2 || 'het hulpmiddel';
    const wmoStatus = subsidieData.question3;
    const medicaleIndicatie = subsidieData.question4;
    const betalingsbereidheid = subsidieData.question5;

    // Determine subsidy chance
    let subsidyChance = 'middel';
    let subsidyText = '';
    let badgeColor = 'orange';

    // Logic for determining subsidy chance
    if (wmoStatus === 'goedgekeurd') {
      subsidyChance = 'hoog';
      badgeColor = 'green';
      subsidyText = `Goed nieuws! U heeft al een goedgekeurde WMO-aanvraag. De kans op vergoeding voor uw ${hulpmiddel} in ${gemeente} is zeer hoog.`;
    } else if (medicaleIndicatie === 'ja-met-verklaring' && (hulpmiddel === 'traplift' || hulpmiddel === 'personenalarm')) {
      subsidyChance = 'hoog';
      badgeColor = 'green';
      subsidyText = `Uitstekend! Met een medische verklaring en uw ${hulpmiddel} heeft u een grote kans op WMO-vergoeding in ${gemeente}.`;
    } else if (medicaleIndicatie === 'ja-zonder-verklaring' || wmoStatus === 'in-behandeling') {
      subsidyChance = 'middel';
      badgeColor = 'orange';
      subsidyText = `Er zijn goede mogelijkheden voor vergoeding van uw ${hulpmiddel} in ${gemeente}. Wij adviseren u graag over de juiste stappen.`;
    } else if (wmoStatus === 'nee' && medicaleIndicatie === 'nee') {
      subsidyChance = 'laag';
      badgeColor = 'red';
      subsidyText = `De kans op WMO-vergoeding lijkt beperkt, maar er zijn andere financieringsmogelijkheden zoals de Blijverslening.`;
    } else {
      subsidyText = `Op basis van uw antwoorden adviseren wij u graag persoonlijk over de mogelijkheden voor vergoeding van uw ${hulpmiddel} in ${gemeente}.`;
    }

    // Set results content
    resultsContent.innerHTML = `<p>${subsidyText}</p>`;

    // Set badge
    resultsBadge.innerHTML = `
      <div class="chance-badge chance-${badgeColor}">
        <span class="badge-label">Kans op vergoeding:</span>
        <span class="badge-value">${subsidyChance.charAt(0).toUpperCase() + subsidyChance.slice(1)}</span>
      </div>
    `;

    // Store results for potential future use
    subsidieData.result = {
      chance: subsidyChance,
      text: subsidyText,
      gemeente: gemeente,
      hulpmiddel: hulpmiddel
    };

    // Log data for debugging (remove in production)
    console.log('Subsidie Check Data:', subsidieData);
  }
});
</script>

<style>
.subsidie-check {
  background: var(--white);
  border-radius: 1rem;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  overflow: hidden;
}

.subsidie-check[data-variant="compact"] {
  max-width: 400px;
}

.subsidie-check-header {
  padding: 1.5rem 2rem;
  background: linear-gradient(135deg, var(--primary-green) 0%, var(--primary-green-dark) 100%);
  color: var(--white);
  text-align: center;
}

.subsidie-check-title {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: var(--white);
}

.subsidie-check-subtitle {
  opacity: 0.9;
  margin-bottom: 0;
}

.subsidie-check-container {
  padding: 2rem;
}

.subsidie-check-progress {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 2rem;
}

.progress-bar {
  flex: 1;
  height: 8px;
  background: var(--border-light);
  border-radius: 4px;
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  background: linear-gradient(90deg, var(--primary-green) 0%, #66bb6a 100%);
  border-radius: 4px;
  transition: width 0.4s ease;
  width: 20%;
}

.progress-text {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--primary-green);
  white-space: nowrap;
}

.subsidie-question {
  display: none;
  opacity: 0;
  transform: translateX(20px);
  transition: all 0.3s ease;
}

.subsidie-question.active {
  display: block;
  opacity: 1;
  transform: translateX(0);
}

.subsidie-question.animate-in {
  animation: slideInSubsidie 0.4s ease-out;
}

@keyframes slideInSubsidie {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.question-icon {
  font-size: 2.5rem;
  text-align: center;
  margin-bottom: 1rem;
}

.question-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-dark);
  margin-bottom: 1.5rem;
  text-align: center;
}

.question-input {
  display: flex;
  gap: 1rem;
  align-items: center;
  margin-bottom: 1rem;
}

.question-input input {
  flex: 1;
  padding: 1rem;
  border: 2px solid var(--border-light);
  border-radius: 0.5rem;
  font-size: 1rem;
  transition: border-color 0.3s ease;
}

.question-input input:focus {
  outline: none;
  border-color: var(--primary-green);
}

.next-btn {
  padding: 1rem 1.5rem;
  background: var(--primary-green);
  color: var(--white);
  border: none;
  border-radius: 0.5rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  white-space: nowrap;
}

.next-btn:disabled {
  background: var(--border-light);
  color: var(--text-gray);
  cursor: not-allowed;
}

.next-btn:not(:disabled):hover {
  background: var(--primary-green-dark);
  transform: translateY(-1px);
}

.question-options {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.option-button {
  background: var(--white);
  border: 2px solid var(--border-light);
  border-radius: 0.75rem;
  padding: 1rem 1.25rem;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 1rem;
  text-align: left;
  font-size: 1rem;
}

.option-button:hover {
  border-color: var(--primary-green);
  background: #f8fdf8;
  transform: translateY(-1px);
}

.option-button.selected {
  border-color: var(--primary-green);
  background: var(--primary-green);
  color: var(--white);
  transform: translateY(-1px);
}

.option-icon {
  font-size: 1.25rem;
  flex-shrink: 0;
}

.option-text {
  font-weight: 500;
}

.custom-input {
  margin-top: 1rem;
}

.custom-input input {
  width: 100%;
  padding: 1rem;
  border: 2px solid var(--border-light);
  border-radius: 0.5rem;
  font-size: 1rem;
}

.custom-input input:focus {
  outline: none;
  border-color: var(--primary-green);
}

.subsidie-results {
  text-align: center;
}

.results-icon {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.results-title {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--text-dark);
  margin-bottom: 1.5rem;
}

.results-content {
  background: var(--warm-gray);
  border-radius: 0.75rem;
  padding: 1.5rem;
  margin-bottom: 1.5rem;
  text-align: left;
}

.results-content p {
  margin-bottom: 0;
  line-height: 1.6;
  color: var(--text-gray);
}

.results-badge {
  margin-bottom: 2rem;
}

.chance-badge {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  border-radius: 2rem;
  font-weight: 500;
}

.chance-green {
  background: #e8f5e8;
  color: #2e7d2e;
  border: 2px solid #4caf50;
}

.chance-orange {
  background: #fff8e1;
  color: #e65100;
  border: 2px solid #ff9800;
}

.chance-red {
  background: #ffebee;
  color: #c62828;
  border: 2px solid #f44336;
}

.badge-label {
  font-size: 0.875rem;
}

.badge-value {
  font-weight: 600;
}

.results-actions {
  display: flex;
  gap: 1rem;
  justify-content: center;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
}

.results-note {
  font-size: 0.875rem;
  color: var(--text-gray);
  font-style: italic;
}

/* Compact variant adjustments */
.subsidie-check[data-variant="compact"] .subsidie-check-container {
  padding: 1.5rem;
}

.subsidie-check[data-variant="compact"] .question-title {
  font-size: 1.125rem;
}

.subsidie-check[data-variant="compact"] .results-actions {
  flex-direction: column;
}

@media (max-width: 768px) {
  .subsidie-check-container {
    padding: 1.5rem;
  }

  .question-input {
    flex-direction: column;
    align-items: stretch;
  }

  .results-actions {
    flex-direction: column;
    align-items: stretch;
  }

  .question-options {
    gap: 0.5rem;
  }

  .option-button {
    padding: 0.875rem 1rem;
  }
}
</style> 